/*
Ascensor.js 
version: 1.6.2 (2013-06-05)
description: Ascensor is a jquery plugin which aims to train and adapt content according to an elevator system
repository: https://github.com/kirkas/Ascensor.js
license: BSD
author: LÃ©o Galley <contact@kirkas.ch>
*/
(function(o,n){function s(n,s){this.element=n,this.options=o.extend({},t,s),this._defaults=t,this._name=i,this.init()}var i="ascensor",t={ascensorName:"ascensor",ascensorFloorName:null,childType:"div",windowsOn:0,direction:"y",loop:!0,ascensorMap:"",time:"1000",easing:"linear",keyNavigation:!0,queued:!1,queuedDirection:"x",overflow:"scroll"};s.prototype.init=function(){function s(s){n.location.hash&&(k=n.location.hash.split("/").pop(),o(N.options.ascensorFloorName).each(function(n){k===N.options.ascensorFloorName[n]&&(y=n,o("."+N.options.ascensorName+"Link").removeClass(N.options.ascensorName+"LinkActive").eq(y).addClass(N.options.ascensorName+"LinkActive"),s||t(y,N.options.time,!0))}))}function i(){m=o(document).width(),g=o(document).height(),o(L).width(m).height(g),o(v).width(m).height(g),"y"===N.options.direction&&o(v).stop().scrollTop(y*g),"x"===N.options.direction&&(o(v).stop().scrollLeft(y*m),o(L).each(function(n){o(this).css("left",n*m)})),"chocolate"===N.options.direction&&(o(L).each(function(n){o(this).css({left:N.options.ascensorMap[n][1]*m,top:N.options.ascensorMap[n][0]*g})}),o(v).stop().scrollLeft(N.options.ascensorMap[y][1]*m).scrollTop(N.options.ascensorMap[y][0]*g))}function t(s,i,t){t&&c(),"y"===N.options.direction&&o(v).stop().animate({scrollTop:s*g},i,N.options.easing,function(){a()}),"x"===N.options.direction&&o(v).stop().animate({scrollLeft:s*m},i,N.options.easing,function(){a()}),"chocolate"===N.options.direction&&(N.options.queued?"x"===N.options.queuedDirection?o(v).scrollLeft()===N.options.ascensorMap[s][1]*m?o(v).stop().animate({scrollTop:N.options.ascensorMap[s][0]*g},i,N.options.easing,function(){a()}):o(v).stop().animate({scrollLeft:N.options.ascensorMap[s][1]*m},i,N.options.easing,function(){o(v).stop().animate({scrollTop:N.options.ascensorMap[s][0]*g},i,N.options.easing,function(){a()})}):"y"===N.options.queuedDirection&&(o(v).scrollTop()===N.options.ascensorMap[s][0]*g?o(v).stop().animate({scrollLeft:N.options.ascensorMap[s][1]*m},i,N.options.easing,function(){a()}):o(v).stop().animate({scrollTop:N.options.ascensorMap[s][0]*g},i,N.options.easing,function(){o(v).stop().animate({scrollLeft:N.options.ascensorMap[s][1]*m},i,N.options.easing,function(){a()})})):o(v).stop().animate({scrollLeft:N.options.ascensorMap[s][1]*m,scrollTop:N.options.ascensorMap[s][0]*g},i,N.options.easing,function(){a()})),t||null!==N.options.ascensorFloorName&&(n.location.hash="/"+N.options.ascensorFloorName[s]),o("."+N.options.ascensorName+"Link").removeClass(N.options.ascensorName+"LinkActive"),o("."+N.options.ascensorName+"Link"+s).addClass(N.options.ascensorName+"LinkActive"),y=s}function e(n){if(o("input, textarea, button").is(":focus"))return!1;switch(n.which){case 40:case 83:o(v).trigger({type:"ascensorDown",floor:y});break;case 38:case 87:o(v).trigger({type:"ascensorUp",floor:y});break;case 37:case 65:o(v).trigger({type:"ascensorLeft",floor:y});break;case 39:case 68:o(v).trigger({type:"ascensorRight",floor:y})}}function c(){o(v).trigger({type:"ascensorStart",floor:y})}function a(){o(v).trigger({type:"ascensorEnd",floor:y})}function r(){"y"==N.options.direction?o(v).trigger({type:"ascensorNext",floor:y}):"chocolate"==N.options.direction&&d(1,0)}function p(){"y"==N.options.direction?o(v).trigger({type:"ascensorPrev",floor:y}):"chocolate"==N.options.direction&&d(-1,0)}function l(){"x"==N.options.direction?o(v).trigger({type:"ascensorPrev",floor:y}):"chocolate"==N.options.direction&&d(0,-1)}function f(){"x"==N.options.direction?o(v).trigger({type:"ascensorNext",floor:y}):"chocolate"==N.options.direction&&d(0,1)}function u(){var o=y-1;0>o&&(o=N.options.loop?w:0),t(o,N.options.time)}function h(){var o=y+1;o>w&&(o=N.options.loop?0:w),t(o,N.options.time)}function d(n,s){var i=[N.options.ascensorMap[y][0]+n,N.options.ascensorMap[y][1]+s];o.each(N.options.ascensorMap,function(o){""+i==""+N.options.ascensorMap[o]&&t(o,N.options.time)})}var m,g,k,N=this,v=this.element,L=o(v).children(N.options.childType),y=N.options.windowsOn,w=-1;if(N.options.direction,o(v).css("position","absolute").width(m).height(g),o(v).css("overflow",N.options.overflow),o(L).width(m).height(g).each(function(){w+=1,o(this).attr("id",N.options.ascensorName+"Floor"+w).addClass(N.options.ascensorName+"Floor")}),("x"===N.options.direction||"chocolate"===N.options.direction)&&o(L).css({position:"absolute",overflow:"auto"}),o(n).resize(function(){i()}).load(function(){i()}).resize(),n.DeviceOrientationEvent&&o(n).bind("orientationchange",function(){i()}),N.options.keyNavigation){o(document).keydown(e)}o(v).on("ascensorLeft",function(){l()}),o(v).on("ascensorRight",function(){f()}),o(v).on("ascensorUp",function(){p()}),o(v).on("ascensorDown",function(){r()}),o(v).on("ascensorNext",function(){h()}),o(v).on("ascensorPrev",function(){u()}),o("."+N.options.ascensorName+"LinkPrev").on("click",function(){u()}),o("."+N.options.ascensorName+"LinkNext").on("click",function(){h()}),o("."+N.options.ascensorName+"LinkLeft").on("click",function(){l()}),o("."+N.options.ascensorName+"LinkRight").on("click",function(){f()}),o("."+N.options.ascensorName+"LinkUp").on("click",function(){r()}),o("."+N.options.ascensorName+"LinkDown").on("click",function(){p()}),o("."+N.options.ascensorName+"Link").on("click",function(){var n=parseInt(o(this).attr("class").split(" ")[1].split(N.options.ascensorName+"Link")[1],10);t(n,N.options.time)}),t(y,1,!0),o(n).on("hashchange",function(){s()}),s(!0)},o.fn[i]=function(n){return this.each(function(){o.data(this,"plugin_"+i)||o.data(this,"plugin_"+i,new s(this,n))})}})(jQuery,window);